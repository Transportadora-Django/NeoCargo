version: '3.8'

services:
  db:
    image: postgres:15
    container_name: NeoCargo_db
    environment:
      POSTGRES_DB: neocargo
      POSTGRES_USER: neocargo_user
      POSTGRES_PASSWORD: neocargo_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - neocargo_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U neocargo_user -d neocargo"]
      interval: 5s
      timeout: 5s
      retries: 5

  mailhog:
    image: mailhog/mailhog:latest
    container_name: NeoCargo_mailhog
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    networks:
      - neocargo_network

  web:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    image: neocargo_web:latest
    container_name: NeoCargo_web
    command: >
      sh -c "
        echo 'Aguardando banco de dados...' &&
        while ! nc -z db 5432; do
          echo 'Aguardando PostgreSQL iniciar...'
          sleep 2
        done &&
        echo 'PostgreSQL iniciado!' &&
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - ../backend:/app/backend
      - ../ui:/app/ui
    ports:
      - "8000:8000"
    env_file:
      - ../backend/.env
    environment:
      - DATABASE_URL=postgresql://neocargo_user:neocargo_password@db:5432/neocargo
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
    depends_on:
      db:
        condition: service_healthy
      mailhog:
        condition: service_started
    networks:
      - neocargo_network

volumes:
  postgres_data:

networks:
  neocargo_network:
    driver: bridge
